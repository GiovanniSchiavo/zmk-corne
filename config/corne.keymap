/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
};

&lt { tapping-term-ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_lshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34>;
        };

        EnterLeft {
            bindings = <&kp RETURN>;
            key-positions = <16 15 14>;
        };

        EnterRight {
            bindings = <&kp RETURN>;
            key-positions = <19 20 21>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
        grave_accent: grave_accent {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp GRAVE &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "grave_accent";
            wait-ms = <40>;
            tap-ms = <40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&trans  &kp Q  &kp W  &kp E             &kp R        &kp T            &kp Y          &kp U        &kp I      &kp O    &kp P             &trans
&trans  &kp A  &kp S  &kp D             &kp F        &kp G            &kp H          &kp J        &kp K      &kp L    &kp SINGLE_QUOTE  &trans
&trans  &kp Z  &kp X  &kp C             &kp V        &kp B            &kp N          &kp M        &kp COMMA  &kp DOT  &kp RIGHT_ALT     &trans
                      &mt TAB LEFT_WIN  &lt 2 SPACE  &kp BACKSPACE    &kp BACKSPACE  &lt 1 SPACE  &lt 3 ESC
            >;
        };

        number_nav {
            bindings = <
&kp ESCAPE  &kp N1    &kp N2                  &kp N3                &kp N4                &kp N5        &kp NUMBER_6  &kp NUMBER_7  &kp N8    &kp N9     &kp N0           &trans
&trans      &kp LALT  &kp C_VOLUME_DOWN       &kp C_MUTE            &kp C_VOLUME_UP       &kp LGUI      &kp LEFT      &kp DOWN      &kp UP    &kp RIGHT  &kp EXCLAMATION  &trans
&trans      &none     &kp C_BACKLIGHT_TOGGLE  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans        &kp F11       &kp F12       &kp SEMI  &kp COLON  &kp QUESTION     &trans
                                              &trans                &kp SPACE             &kp DELETE    &trans        &trans        &trans
            >;
        };

        symbols {
            bindings = <
&trans  &none   &kp K_UNDO   &kp K_REDO  &kp PERCENT  &trans       &kp CARET       &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLASH      &trans
&trans  &trans  &kp AT_SIGN  &kp HASH    &kp DOLLAR   &kp TILDE    &kp MINUS       &kp EQUAL     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE       &trans
&trans  &none   &kp K_CUT    &kp K_COPY  &kp K_PASTE  &trans       &kp UNDERSCORE  &kp PLUS      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH  &trans
                             &trans      &trans       &trans       &trans          &trans        &trans
            >;
        };

        grave_accent {
            bindings = <
&trans  &trans           &trans  &grave_accent E         &trans                   &trans    &trans  &grave_accent U  &grave_accent I  &grave_accent O  &trans  &trans
&trans  &grave_accent A  &trans  &kp LC(LG(LEFT_ARROW))  &kp LG(LC(RIGHT_ARROW))  &trans    &trans  &trans           &trans           &trans           &trans  &trans
&trans  &trans           &trans  &trans                  &trans                   &trans    &trans  &trans           &trans           &trans           &trans  &trans
                                 &trans                  &trans                   &trans    &trans  &trans           &trans
            >;
        };
    };
};
